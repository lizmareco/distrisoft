generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model apertura_caja {
  id_apertura_caja Int                @id(map: "apertura_caja_pk") @default(autoincrement())
  saldo_inicial    Float
  saldo_actual     Float
  fecha_apertura   DateTime           @db.Timestamp(6)
  fecha_cierre     DateTime           @db.Timestamp(6)
  id_caja          Float
  observacion      String             @db.VarChar
  id_estado_caja   Int
  caja             caja               @relation(fields: [id_caja], references: [id_caja], onDelete: NoAction, onUpdate: NoAction, map: "caja_apertura_caja_fk")
  estado_caja      estado_caja        @relation(fields: [id_estado_caja], references: [id_estado_caja], onDelete: NoAction, onUpdate: NoAction, map: "estado_caja_apertura_caja_fk")
  transaccion_caja transaccion_caja[]
}

model caja {
  id_caja        Float           @id(map: "caja_pk") @default(dbgenerated("nextval('caja_id_caja_seq'::regclass)"))
  id_usuario     Int
  id_estado_caja Int
  apertura_caja  apertura_caja[]
  estado_caja    estado_caja     @relation(fields: [id_estado_caja], references: [id_estado_caja], onDelete: NoAction, onUpdate: NoAction, map: "estado_caja_caja_fk")
  usuario        usuario         @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_caja_fk")
}

model categoria_empresa {
  id_categoria_empresa   Int       @id(map: "categoria_empresa_pk") @default(autoincrement())
  desc_categoria_empresa String    @db.VarChar
  empresa                empresa[]
}

model ciudad {
  id_ciudad   Int       @id(map: "ciudad_pk") @default(autoincrement())
  desc_ciudad String    @db.VarChar
  empresa     empresa[]
  persona     persona[]
}

model cliente {
  id_cliente              Int                       @id(map: "cliente_pk") @default(autoincrement())
  id_persona              Int
  id_sector_cliente       Int
  id_condicion_pago       Int
  id_empresa              Int?
  condicion_pago          condicion_pago            @relation(fields: [id_condicion_pago], references: [id_condicion_pago], onDelete: NoAction, onUpdate: NoAction, map: "condicion_pago_cliente_fk")
  empresa                 empresa?                  @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "empresa_cliente_fk")
  persona                 persona                   @relation(fields: [id_persona], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "persona_cliente_fk")
  sector_cliente          sector_cliente            @relation(fields: [id_sector_cliente], references: [id_sector_cliente], onDelete: NoAction, onUpdate: NoAction, map: "sector_cliente_cliente_fk")
  cotizacion_cliente      cotizacion_cliente[]
  factura_cliente_contado factura_cliente_contado[]
  factura_cliente_credito factura_cliente_credito[]
  pedido_cliente          pedido_cliente[]
}

model condicion_pago {
  id_condicion_pago   Int         @id(map: "condicion_pago_pk") @default(autoincrement())
  desc_condicion_pago String      @db.VarChar
  cliente             cliente[]
  proveedor           proveedor[]
}

model cotizacion_cliente {
  id_cotizacion_cliente        Int                          @id(map: "cotizacion_cliente_pk") @default(autoincrement())
  fecha_cotizacion             DateTime                     @db.Timestamp(6)
  vendedor                     Int
  monto_total                  Float
  id_cliente                   Int
  validez                      Int
  id_estado_cotizacion_cliente Int
  cliente                      cliente                      @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "cliente_cotizacion_cliente_fk")
  estado_cotizacion_cliente    estado_cotizacion_cliente    @relation(fields: [id_estado_cotizacion_cliente], references: [id_estado_cotizacion_cliente], onDelete: NoAction, onUpdate: NoAction, map: "estado_cotizacion_cliente_cotizacion_cliente_fk")
  usuario                      usuario                      @relation(fields: [vendedor], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_cotizacion_cliente_fk")
  detalle_cotizacion_cliente   detalle_cotizacion_cliente[]
}

model cotizacion_proveedor {
  id_cotizacion_proveedor    Int                      @id(map: "cotizacion_proveedor_pk") @default(autoincrement())
  id_proveedor               Int
  fecha_cotizacion_proveedor DateTime                 @db.Timestamp(6)
  validez                    Int
  monto_total                Float
  id_estado_cotizacion_prov  Int
  estado_cotizacion_prov     estado_cotizacion_prov   @relation(fields: [id_estado_cotizacion_prov], references: [id_estado_cotizacion_prov], onDelete: NoAction, onUpdate: NoAction, map: "estado_cotizacion_prov_cotizacion_proveedor_fk")
  proveedor                  proveedor                @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "proveedor_cotizacion_proveedor_fk")
  detalle_cotizacion_prov    detalle_cotizacion_prov?
  orden_compra               orden_compra[]
}

model detalle_cotizacion_cliente {
  id_cotizacion_cliente Int
  id_producto           Int
  cantidad              Int
  subtotal              Float
  cotizacion_cliente    cotizacion_cliente @relation(fields: [id_cotizacion_cliente], references: [id_cotizacion_cliente], onDelete: NoAction, onUpdate: NoAction, map: "cotizacion_cliente_detalle_cotizacion_cliente_fk")
  producto              producto           @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "producto_detalle_cotizacion_cliente_fk")

  @@id([id_cotizacion_cliente, id_producto], map: "detalle_cotizacion_cliente_pk")
}

model detalle_cotizacion_prov {
  id_cotizacion_proveedor Int                  @id(map: "detalle_cotizacion_prov_pk")
  cantidad                Int
  precio_unitario         Float
  subtotal                Float
  id_materia_prima        Int
  cotizacion_proveedor    cotizacion_proveedor @relation(fields: [id_cotizacion_proveedor], references: [id_cotizacion_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "cotizacion_proveedor_detalle_cotizacion_prov_fk")
  materia_prima           materia_prima        @relation(fields: [id_materia_prima], references: [id_materia_prima], onDelete: NoAction, onUpdate: NoAction, map: "materia_prima_detalle_cotizacion_prov_fk")
}

model detalle_pago_fac_cliente {
  id_pago_factura         Int                     @id(map: "detalle_pago_fac_cliente_pk") @default(autoincrement())
  nro_fac_cliente_credito Int
  fecha_pago              DateTime                @db.Timestamp(6)
  monto_pago              Float
  id_metodo_pago          Int
  observacion             String                  @db.VarChar
  comprobante_pago        String                  @db.VarChar
  factura_cliente_credito factura_cliente_credito @relation(fields: [nro_fac_cliente_credito], references: [nro_fac_cliente_credito], onDelete: NoAction, onUpdate: NoAction, map: "factura_cliente_credito_detalle_cobro_factua_fk")
  metodo_pago             metodo_pago             @relation(fields: [id_metodo_pago], references: [id_metodo_pago], onDelete: NoAction, onUpdate: NoAction, map: "metodo_pago_detalle_pago_fac_cliente_fk")
}

model detalle_pago_fac_prov {
  id_pago_factura         Int                  @id(map: "detalle_pago_fac_prov_pk") @default(autoincrement())
  id_factura_credito_prov Int
  fecha_pago              DateTime             @db.Timestamp(6)
  monto_pago              Float
  id_metodo_pago          Int
  observacion             String               @db.VarChar
  comprobante_pago        String               @db.VarChar
  factura_credito_prov    factura_credito_prov @relation(fields: [id_factura_credito_prov], references: [id_factura_credito_prov], onDelete: NoAction, onUpdate: NoAction, map: "factura_credito_prov_pago_factura_fk")
  metodo_pago             metodo_pago          @relation(fields: [id_metodo_pago], references: [id_metodo_pago], onDelete: NoAction, onUpdate: NoAction, map: "metodo_pago_pago_factura_fk")
}

model empresa {
  id_empresa           Int               @id(map: "empresa_pk") @default(autoincrement())
  id_categoria_empresa Int
  razon_social         String            @db.VarChar
  id_tipo_persona      Int
  id_tipo_documento    Int
  ruc                  String            @db.VarChar
  direccion_empresa    String            @db.VarChar
  id_ciudad            Int
  correo_empresa       String            @db.VarChar
  telefono             String            @db.VarChar
  persona_contacto     Int
  cliente              cliente[]
  categoria_empresa    categoria_empresa @relation(fields: [id_categoria_empresa], references: [id_categoria_empresa], onDelete: NoAction, onUpdate: NoAction, map: "categoria_empresa_empresa_fk")
  ciudad               ciudad            @relation(fields: [id_ciudad], references: [id_ciudad], onDelete: NoAction, onUpdate: NoAction, map: "ciudad_empresa_fk")
  persona              persona           @relation(fields: [persona_contacto], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "persona_empresa_fk")
  tipo_documento       tipo_documento    @relation(fields: [id_tipo_documento], references: [id_tipo_documento], onDelete: NoAction, onUpdate: NoAction, map: "tipo_documento_empresa_fk")
  tipo_persona         tipo_persona      @relation(fields: [id_tipo_persona], references: [id_tipo_persona], onDelete: NoAction, onUpdate: NoAction, map: "tipo_persona_empresa_fk")
  proveedor            proveedor[]
}

model estado_caja {
  id_estado_caja   Int             @id(map: "estado_caja_pk") @default(autoincrement())
  desc_estado_caja String          @db.VarChar
  apertura_caja    apertura_caja[]
  caja             caja[]
}

model estado_cotizacion_cliente {
  id_estado_cotizacion_cliente   Int                  @id(map: "estado_cotizacion_cliente_pk") @default(autoincrement())
  desc_estado_cotizacion_cliente String               @db.VarChar
  cotizacion_cliente             cotizacion_cliente[]
}

model estado_cotizacion_prov {
  id_estado_cotizacion_prov   Int                    @id(map: "estado_cotizacion_prov_pk") @default(autoincrement())
  desc_estado_cotizacion_prov String                 @db.VarChar
  cotizacion_proveedor        cotizacion_proveedor[]
}

model estado_factu_cliente {
  id_estado_factu_cliente Int                       @id(map: "estado_factu_cliente_pk") @default(autoincrement())
  desc_est_fact_cliente   String                    @db.VarChar
  factura_cliente_contado factura_cliente_contado[]
  factura_cliente_credito factura_cliente_credito[]
}

model estado_factura_prov {
  id_estado_factura_prov Int                    @id(map: "estado_factura_prov_pk") @default(autoincrement())
  desc_factura_prov      String                 @db.VarChar
  factura_contado_prov   factura_contado_prov[]
  factura_credito_prov   factura_credito_prov[]
}

model estado_materia_prima {
  id_estado_materia_prima   Int             @id(map: "estado_materia_prima_pk") @default(autoincrement())
  desc_estado_materia_prima String          @db.VarChar
  materia_prima             materia_prima[]
}

model estado_nota {
  id_estado_nota   Int    @id(map: "estado_nota_pk") @default(autoincrement())
  desc_estado_nota String @db.VarChar
  nota             nota[]
}

model estado_orden_compra {
  id_estado_orden_compra   Int            @id(map: "estado_orden_compra_pk") @default(autoincrement())
  desc_estado_orden_compra String         @db.VarChar
  orden_compra             orden_compra[]
}

model estado_orden_prod {
  id_estado_orden_prod   Int                @id(map: "estado_orden_prod_pk") @default(autoincrement())
  desc_estado_orden_prod String             @db.VarChar
  orden_produccion       orden_produccion[]
}

model estado_pedido {
  id_estado_pedido   Int              @id(map: "estado_pedido_pk") @default(autoincrement())
  desc_estado_pedido String           @db.VarChar
  pedido_cliente     pedido_cliente[]
}

model estado_permiso {
  id_estado_permiso   Int       @id(map: "estado_permiso_pk") @default(autoincrement())
  desc_estado_permiso String    @db.VarChar
  permiso             permiso[]
}

model estado_producto {
  id_estado_producto   Int        @id(map: "estado_producto_pk") @default(autoincrement())
  desc_estado_producto String     @db.VarChar
  producto             producto[]
}

model estado_rol {
  id_estado_rol   Int    @id(map: "estado_rol_pk") @default(autoincrement())
  desc_estado_rol String @db.VarChar
  rol             rol[]
}

model estado_usuario {
  id_estado_usuario   Int       @id(map: "estado_usuario_pk") @default(autoincrement())
  desc_estado_usuario String    @db.VarChar
  usuario             usuario[]
}

model factura_cliente_contado {
  nro_fac_cliente_contado Int                  @id(map: "factura_cliente_contado_pk")
  fecha_emision           DateTime             @db.Timestamp(6)
  timbrado                Int
  id_cliente              Int
  id_pedido               Int
  operador                Int
  id_impuesto             Int
  monto_total_factura     Float
  observacion             String               @db.VarChar
  descuento               Float
  id_metodo_pago          Int
  id_estado_factu_cliente Int
  cliente                 cliente              @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "cliente_factura_cliente_contado_fk")
  estado_factu_cliente    estado_factu_cliente @relation(fields: [id_estado_factu_cliente], references: [id_estado_factu_cliente], onDelete: NoAction, onUpdate: NoAction, map: "estado_factu_cliente_factura_cliente_contado_fk")
  impuestos               impuestos            @relation(fields: [id_impuesto], references: [id_impuesto], onDelete: NoAction, onUpdate: NoAction, map: "impuestos_factura_cliente_contado_fk")
  metodo_pago             metodo_pago          @relation(fields: [id_metodo_pago], references: [id_metodo_pago], onDelete: NoAction, onUpdate: NoAction, map: "metodo_pago_factura_cliente_contado_fk")
  pedido_cliente          pedido_cliente       @relation(fields: [id_pedido], references: [id_pedido], onDelete: NoAction, onUpdate: NoAction, map: "pedido_cliente_factura_cliente_contado_fk")
  usuario                 usuario              @relation(fields: [operador], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_factura_cliente_contado_fk")
  nota                    nota[]
}

model factura_cliente_credito {
  nro_fac_cliente_credito  Int                        @id(map: "factura_cliente_credito_pk") @default(autoincrement())
  monto_total_factura      String                     @db.VarChar
  id_impuesto              Int
  id_estado_factu_cliente  Int
  fecha_emision            String                     @db.VarChar
  id_pedido                Int
  id_cliente               Int
  timbrado                 Int
  operador                 Int
  saldo_restante           Float
  plazo_pago               Int
  fecha_vencimiento        DateTime                   @db.Timestamp(6)
  descuento                Float
  detalle_pago_fac_cliente detalle_pago_fac_cliente[]
  cliente                  cliente                    @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "cliente_factura_cliente_credito_fk")
  estado_factu_cliente     estado_factu_cliente       @relation(fields: [id_estado_factu_cliente], references: [id_estado_factu_cliente], onDelete: NoAction, onUpdate: NoAction, map: "estado_factu_cliente_factura_cliente_credito_fk")
  impuestos                impuestos                  @relation(fields: [id_impuesto], references: [id_impuesto], onDelete: NoAction, onUpdate: NoAction, map: "impuestos_factura_cliente_credito_fk")
  pedido_cliente           pedido_cliente             @relation(fields: [id_pedido], references: [id_pedido], onDelete: NoAction, onUpdate: NoAction, map: "pedido_cliente_factura_cliente_credito_fk")
  usuario                  usuario                    @relation(fields: [operador], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_factura_cliente_credito_fk")
  nota                     nota[]
}

model factura_contado_prov {
  id_factura_contado_prov Int                 @id(map: "factura_contado_prov_pk") @default(autoincrement())
  id_proveedor            Int
  fecha_emision           DateTime            @db.Timestamp(6)
  nro_fac_prov_contado    String              @db.VarChar
  monto_total             Float
  id_estado_factura_prov  Int
  id_orden_compra         Int?
  id_metodo_pago          Int
  comprobante_pago        String              @db.VarChar
  estado_factura_prov     estado_factura_prov @relation(fields: [id_estado_factura_prov], references: [id_estado_factura_prov], onDelete: NoAction, onUpdate: NoAction, map: "estado_factura_prov_factura_proveedor_fk")
  metodo_pago             metodo_pago         @relation(fields: [id_metodo_pago], references: [id_metodo_pago], onDelete: NoAction, onUpdate: NoAction, map: "metodo_pago_factura_contado_prov_fk")
  orden_compra            orden_compra?       @relation(fields: [id_orden_compra], references: [id_orden_compra], onDelete: NoAction, onUpdate: NoAction, map: "orden_compra_factura_proveedor_fk")
  proveedor               proveedor           @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "proveedor_factura_proveedor_fk")
}

model factura_credito_prov {
  id_factura_credito_prov Int                     @id(map: "factura_credito_prov_pk") @default(autoincrement())
  monto_total             Float
  monto_pagado            Float
  saldo_restante          Float
  plazo_pago              Int
  id_orden_compra         Int?
  id_estado_factura_prov  Int
  fecha_emision           DateTime                @db.Timestamp(6)
  nro_fac_prov_credito    String                  @db.VarChar
  id_proveedor            Int
  fecha_vencimiento       DateTime                @db.Timestamp(6)
  detalle_pago_fac_prov   detalle_pago_fac_prov[]
  estado_factura_prov     estado_factura_prov     @relation(fields: [id_estado_factura_prov], references: [id_estado_factura_prov], onDelete: NoAction, onUpdate: NoAction, map: "estado_factura_prov_factura_credito_prov_fk")
  orden_compra            orden_compra?           @relation(fields: [id_orden_compra], references: [id_orden_compra], onDelete: NoAction, onUpdate: NoAction, map: "orden_compra_factura_credito_prov_fk")
  proveedor               proveedor               @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "proveedor_factura_credito_prov_fk")
}

model impuestos {
  id_impuesto             Int                       @id(map: "impuestos_pk")
  desc_impuesto           String                    @db.VarChar
  porcentaje_impuesto     Float
  factura_cliente_contado factura_cliente_contado[]
  factura_cliente_credito factura_cliente_credito[]
}

model informe {
  id_informe        Int          @id(map: "informe_pk") @default(autoincrement())
  fecha_generacion  DateTime     @db.Timestamp(6)
  usuario_generador Int
  id_tipo_informe   Int
  tipo_informe      tipo_informe @relation(fields: [id_tipo_informe], references: [id_tipo_informe], onDelete: NoAction, onUpdate: NoAction, map: "tipo_informe_informe_fk")
  usuario           usuario      @relation(fields: [usuario_generador], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_informe_fk")
}

model materia_prima {
  id_materia_prima        Int                       @id(map: "materia_prima_pk") @default(autoincrement())
  nombre_materia_prima    String                    @db.VarChar
  desc_materia_prima      String                    @db.VarChar
  stock_actual            Float
  stock_minimo            Float
  id_unidad_medida        Int
  id_estado_materia_prima Int
  detalle_cotizacion_prov detalle_cotizacion_prov[]
  estado_materia_prima    estado_materia_prima      @relation(fields: [id_estado_materia_prima], references: [id_estado_materia_prima], onDelete: NoAction, onUpdate: NoAction, map: "estado_materia_prima_materia_prima_fk")
  unidad_medida           unidad_medida             @relation(fields: [id_unidad_medida], references: [id_unidad_medida], onDelete: NoAction, onUpdate: NoAction, map: "unidad_medida_materia_prima_fk")
}

model metodo_pago {
  id_metodo_pago           Int                        @id(map: "metodo_pago_pk")
  desc_metodo_pago         String                     @db.VarChar
  detalle_pago_fac_cliente detalle_pago_fac_cliente[]
  detalle_pago_fac_prov    detalle_pago_fac_prov[]
  factura_cliente_contado  factura_cliente_contado[]
  factura_contado_prov     factura_contado_prov[]
  pedido_cliente           pedido_cliente[]
}

model nota {
  id_nota_credito         Int                      @id(map: "nota_pk") @default(autoincrement())
  fecha_emision           DateTime                 @db.Timestamp(6)
  motivo                  String                   @db.VarChar
  monto                   Float
  id_tipo_nota            String                   @db.VarChar
  id_estado_nota          Int
  nro_fac_cliente_credito Int?
  nro_fac_cliente_contado Int?
  estado_nota             estado_nota              @relation(fields: [id_estado_nota], references: [id_estado_nota], onDelete: NoAction, onUpdate: NoAction, map: "estado_nota_nota_fk")
  factura_cliente_contado factura_cliente_contado? @relation(fields: [nro_fac_cliente_contado], references: [nro_fac_cliente_contado], onDelete: NoAction, onUpdate: NoAction, map: "factura_cliente_contado_nota_fk")
  factura_cliente_credito factura_cliente_credito? @relation(fields: [nro_fac_cliente_credito], references: [nro_fac_cliente_credito], onDelete: NoAction, onUpdate: NoAction, map: "factura_cliente_credito_nota_fk")
  tipo_nota               tipo_nota                @relation(fields: [id_tipo_nota], references: [id_tipo_nota], onDelete: NoAction, onUpdate: NoAction, map: "tipo_nota_nota_fk")
}

model notificacion {
  id_notificacion Int      @id(map: "notificacion_pk") @default(autoincrement())
  mensaje         String   @db.VarChar
  fecha_envio     DateTime @db.Date
  usuario_destino Int
  leido           Boolean
  usuario         usuario  @relation(fields: [usuario_destino], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_notificacion_fk")
}

model orden_compra {
  id_orden_compra         Int                    @id(map: "orden_compra_pk") @default(autoincrement())
  fecha_orden             DateTime               @db.Timestamp(6)
  id_estado_orden_compra  Int
  id_cotizacion_proveedor Int
  observacion             String                 @db.VarChar
  factura_contado_prov    factura_contado_prov[]
  factura_credito_prov    factura_credito_prov[]
  cotizacion_proveedor    cotizacion_proveedor   @relation(fields: [id_cotizacion_proveedor], references: [id_cotizacion_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "cotizacion_proveedor_orden_compra_fk")
  estado_orden_compra     estado_orden_compra    @relation(fields: [id_estado_orden_compra], references: [id_estado_orden_compra], onDelete: NoAction, onUpdate: NoAction, map: "estado_orden_compra_orden_compra_fk")
}

model orden_produccion {
  id_orden_produccion  Int               @id(map: "orden_produccion_pk") @default(autoincrement())
  id_pedido            Int
  fecha_inicio_prod    DateTime          @db.Timestamp(6)
  fecha_fin_prod       DateTime          @db.Timestamp(6)
  operador_encargado   Int
  id_estado_orden_prod Int
  estado_orden_prod    estado_orden_prod @relation(fields: [id_estado_orden_prod], references: [id_estado_orden_prod], onDelete: NoAction, onUpdate: NoAction, map: "estado_orden_prod_orden_produccion_fk")
  pedido_cliente       pedido_cliente    @relation(fields: [id_pedido], references: [id_pedido], onDelete: NoAction, onUpdate: NoAction, map: "pedido_cliente_orden_produccion_fk")
  usuario              usuario           @relation(fields: [operador_encargado], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_orden_produccion_fk")
}

model pedido_cliente {
  id_pedido               Int                       @id(map: "pedido_cliente_pk") @default(autoincrement())
  fecha_pedido            DateTime                  @db.Timestamp(6)
  fecha_entrega           DateTime?                 @db.Timestamp(6)
  id_cliente              Int
  id_estado_pedido        Int
  monto_total             Float
  vendedor                Int
  observacion             String                    @db.VarChar
  id_metodo_pago          Int
  factura_cliente_contado factura_cliente_contado[]
  factura_cliente_credito factura_cliente_credito[]
  orden_produccion        orden_produccion[]
  cliente                 cliente                   @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "cliente_pedido_cliente_fk")
  estado_pedido           estado_pedido             @relation(fields: [id_estado_pedido], references: [id_estado_pedido], onDelete: NoAction, onUpdate: NoAction, map: "estado_pedido_pedido_cliente_fk")
  metodo_pago             metodo_pago               @relation(fields: [id_metodo_pago], references: [id_metodo_pago], onDelete: NoAction, onUpdate: NoAction, map: "metodo_pago_pedido_cliente_fk")
  usuario                 usuario                   @relation(fields: [vendedor], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_pedido_cliente_fk")
  pedido_detalle          pedido_detalle[]
}

model pedido_detalle {
  id_pedido      Int
  id_producto    Int
  cantidad       Int
  subtotal       Float
  pedido_cliente pedido_cliente @relation(fields: [id_pedido], references: [id_pedido], onDelete: NoAction, onUpdate: NoAction, map: "pedido_cliente_pedido_detalle_fk")
  producto       producto       @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "producto_pedido_detalle_fk")

  @@id([id_pedido, id_producto], map: "pedido_detalle_pk")
}

model permiso {
  id_permiso        Int            @id(map: "permiso_pk") @default(autoincrement())
  id_estado_permiso Int
  nombre_permiso    String         @db.VarChar
  estado_permiso    estado_permiso @relation(fields: [id_estado_permiso], references: [id_estado_permiso], onDelete: NoAction, onUpdate: NoAction, map: "estado_permiso_permiso_fk")
  rol_permiso       rol_permiso[]
}

model persona {
  id_persona        Int            @id(map: "persona_pk") @default(autoincrement())
  nro_documento     String         @db.VarChar
  nombre            String         @db.VarChar
  apellido          String         @db.VarChar
  fecha_nacimiento  DateTime       @db.Date
  direccion         String         @db.VarChar
  nro_telefono      String         @db.VarChar
  correo_persona    String         @db.VarChar
  id_ciudad         Int
  id_tipo_persona   Int
  id_tipo_documento Int
  cliente           cliente[]
  empresa           empresa[]
  ciudad            ciudad         @relation(fields: [id_ciudad], references: [id_ciudad], onDelete: NoAction, onUpdate: NoAction, map: "ciudad_persona_fk")
  tipo_documento    tipo_documento @relation(fields: [id_tipo_documento], references: [id_tipo_documento], onDelete: NoAction, onUpdate: NoAction, map: "tipo_documento_persona_fk")
  tipo_persona      tipo_persona   @relation(fields: [id_tipo_persona], references: [id_tipo_persona], onDelete: NoAction, onUpdate: NoAction, map: "tipo_persona_persona_fk")
  usuario           usuario[]
}

model producto {
  id_producto                Int                          @id(map: "producto_pk") @default(autoincrement())
  nombre_producto            String                       @db.VarChar
  descripcion                String                       @db.VarChar
  id_tipo_producto           Int
  peso_unidad                Float
  precio_unitario            Float
  id_estado_producto         Int
  id_unidad_medida           Int
  detalle_cotizacion_cliente detalle_cotizacion_cliente[]
  pedido_detalle             pedido_detalle[]
  estado_producto            estado_producto              @relation(fields: [id_estado_producto], references: [id_estado_producto], onDelete: NoAction, onUpdate: NoAction, map: "estado_producto_producto_fk")
  tipo_producto              tipo_producto                @relation(fields: [id_tipo_producto], references: [id_tipo_producto], onDelete: NoAction, onUpdate: NoAction, map: "tipo_producto_producto_fk")
  unidad_medida              unidad_medida                @relation(fields: [id_unidad_medida], references: [id_unidad_medida], onDelete: NoAction, onUpdate: NoAction, map: "unidad_medida_producto_fk")
}

model proveedor {
  id_proveedor         Int                    @id(map: "proveedor_pk") @default(autoincrement())
  id_empresa           Int
  id_condicion_pago    Int
  cotizacion_proveedor cotizacion_proveedor[]
  factura_contado_prov factura_contado_prov[]
  factura_credito_prov factura_credito_prov[]
  condicion_pago       condicion_pago         @relation(fields: [id_condicion_pago], references: [id_condicion_pago], onDelete: NoAction, onUpdate: NoAction, map: "condicion_pago_proveedor_fk")
  empresa              empresa                @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "empresa_proveedor_fk")
}

model rol {
  id_rol        Int           @id(map: "rol_pk") @default(autoincrement())
  id_estado_rol Int
  nombre_rol    String        @db.VarChar
  estado_rol    estado_rol    @relation(fields: [id_estado_rol], references: [id_estado_rol], onDelete: NoAction, onUpdate: NoAction, map: "estado_rol_rol_fk")
  rol_permiso   rol_permiso[]
  usuario       usuario[]
}

model rol_permiso {
  id_rol     Int
  id_permiso Int
  permiso    permiso @relation(fields: [id_permiso], references: [id_permiso], onDelete: NoAction, onUpdate: NoAction, map: "permiso_rol_permiso_fk")
  rol        rol     @relation(fields: [id_rol], references: [id_rol], onDelete: NoAction, onUpdate: NoAction, map: "rol_rol_permiso_fk")

  @@id([id_rol, id_permiso], map: "rol_permiso_pk")
}

model sector_cliente {
  id_sector_cliente   Int       @id(map: "sector_cliente_pk")
  desc_sector_cliente String    @db.VarChar
  cliente             cliente[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model tipo_documento {
  id_tipo_documento   Int       @id(map: "tipo_documento_pk") @default(autoincrement())
  desc_tipo_documento String    @db.VarChar
  empresa             empresa[]
  persona             persona[]
}

model tipo_informe {
  id_tipo_informe   Int       @id(map: "tipo_informe_pk") @default(autoincrement())
  desc_tipo_informe String    @db.VarChar
  informe           informe[]
}

model tipo_nota {
  id_tipo_nota   String @id(map: "tipo_nota_pk") @default(dbgenerated("nextval('tipo_nota_id_tipo_nota_seq'::regclass)")) @db.VarChar
  desc_tipo_nota String @db.VarChar
  nota           nota[]
}

model tipo_persona {
  id_tipo_persona   Int       @id(map: "tipo_persona_pk") @default(autoincrement())
  desc_tipo_persona String    @db.VarChar
  empresa           empresa[]
  persona           persona[]
}

model tipo_producto {
  id_tipo_producto   Int        @id(map: "tipo_producto_pk") @default(autoincrement())
  desc_tipo_producto String     @db.VarChar
  producto           producto[]
}

model tipo_transaccion {
  id_tipo_transaccion   Int                @id(map: "tipo_transaccion_pk") @default(autoincrement())
  desc_tipo_transaccion String             @db.VarChar
  transaccion_caja      transaccion_caja[]
}

model transaccion_caja {
  id_transaccion_caja Int              @id(map: "transaccion_caja_pk") @default(autoincrement())
  id_apertura_caja    Int
  id_tipo_transaccion Int
  monto               Float
  fecha_transaccion   DateTime         @db.Timestamp(6)
  observacion         String           @db.VarChar
  apertura_caja       apertura_caja    @relation(fields: [id_apertura_caja], references: [id_apertura_caja], onDelete: NoAction, onUpdate: NoAction, map: "apertura_caja_transaccion_caja_fk")
  tipo_transaccion    tipo_transaccion @relation(fields: [id_tipo_transaccion], references: [id_tipo_transaccion], onDelete: NoAction, onUpdate: NoAction, map: "tipo_transaccion_transaccion_caja_fk")
}

model unidad_medida {
  id_unidad_medida   Int             @id(map: "unidad_medida_pk") @default(autoincrement())
  desc_unidad_medida String          @db.VarChar
  abreviatura        String          @db.VarChar
  materia_prima      materia_prima[]
  producto           producto[]
}

model usuario {
  id_usuario              Int                       @id(map: "usuario_pk") @default(autoincrement())
  contrase_a              String                    @map("contraseña") @db.VarChar
  nombre_usuario          String                    @db.VarChar
  id_rol                  Int
  id_estado_usuario       Int
  id_persona              Int
  caja                    caja[]
  cotizacion_cliente      cotizacion_cliente[]
  factura_cliente_contado factura_cliente_contado[]
  factura_cliente_credito factura_cliente_credito[]
  informe                 informe[]
  notificacion            notificacion[]
  orden_produccion        orden_produccion[]
  pedido_cliente          pedido_cliente[]
  estado_usuario          estado_usuario            @relation(fields: [id_estado_usuario], references: [id_estado_usuario], onDelete: NoAction, onUpdate: NoAction, map: "estado_usuario_usuario_fk")
  persona                 persona                   @relation(fields: [id_persona], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "persona_usuario_fk")
  rol                     rol                       @relation(fields: [id_rol], references: [id_rol], onDelete: NoAction, onUpdate: NoAction, map: "rol_usuario_fk")
}
